[{"/Users/karen3/Documents/GitHub/project/src/index.js":"1","/Users/karen3/Documents/GitHub/project/src/App.js":"2","/Users/karen3/Documents/GitHub/project/src/components/MainContentWrapper.js":"3","/Users/karen3/Documents/GitHub/project/src/components/Store.js":"4","/Users/karen3/Documents/GitHub/project/src/components/IphoneProducts.js":"5","/Users/karen3/Documents/GitHub/project/src/components/AllProducts.js":"6","/Users/karen3/Documents/GitHub/project/src/components/NavigationCategory.js":"7","/Users/karen3/Documents/GitHub/project/src/components/ProfileInfo.js":"8","/Users/karen3/Documents/GitHub/project/src/components/Login.js":"9","/Users/karen3/Documents/GitHub/project/src/components/SignUp.js":"10","/Users/karen3/Documents/GitHub/project/src/components/SamsungProducts.js":"11","/Users/karen3/Documents/GitHub/project/src/components/Products.js":"12","/Users/karen3/Documents/GitHub/project/src/components/AuthReducer.js":"13","/Users/karen3/Documents/GitHub/project/src/components/ActionPromise.js":"14","/Users/karen3/Documents/GitHub/project/src/components/Cart.js":"15","/Users/karen3/Documents/GitHub/project/src/components/ProductInfo.js":"16","/Users/karen3/Documents/GitHub/project/src/components/Reducer.js":"17","/Users/karen3/Documents/GitHub/project/src/components/Eye.js":"18","/Users/karen3/Documents/GitHub/project/src/components/ActionFullLogin.js":"19","/Users/karen3/Documents/GitHub/project/src/components/Profile.js":"20","/Users/karen3/Documents/GitHub/project/src/components/ProductInfoWindow.js":"21","/Users/karen3/Documents/GitHub/project/src/components/ProductCard.js":"22","/Users/karen3/Documents/GitHub/project/src/components/Logout.js":"23","/Users/karen3/Documents/GitHub/project/src/components/GotUserFromToken.js":"24","/Users/karen3/Documents/GitHub/project/src/components/AdminEditCategory.js":"25","/Users/karen3/Documents/GitHub/project/src/components/AdminMenu.js":"26","/Users/karen3/Documents/GitHub/project/src/components/AdminCategoriesMenu.js":"27","/Users/karen3/Documents/GitHub/project/src/components/AdminCategoryInfo.js":"28","/Users/karen3/Documents/GitHub/project/src/components/AdminEditItem.js":"29","/Users/karen3/Documents/GitHub/project/src/components/AddNewItem.js":"30"},{"size":543,"mtime":1660658391841,"results":"31","hashOfConfig":"32"},{"size":2356,"mtime":1660731925385,"results":"33","hashOfConfig":"32"},{"size":167,"mtime":1660658391836,"results":"34","hashOfConfig":"32"},{"size":373,"mtime":1660658391841,"results":"35","hashOfConfig":"32"},{"size":1389,"mtime":1660658391835,"results":"36","hashOfConfig":"32"},{"size":1349,"mtime":1660658391835,"results":"37","hashOfConfig":"32"},{"size":1636,"mtime":1660668904636,"results":"38","hashOfConfig":"32"},{"size":3615,"mtime":1660676446041,"results":"39","hashOfConfig":"32"},{"size":2339,"mtime":1660668155497,"results":"40","hashOfConfig":"32"},{"size":3917,"mtime":1660732048123,"results":"41","hashOfConfig":"32"},{"size":1422,"mtime":1660658391841,"results":"42","hashOfConfig":"32"},{"size":804,"mtime":1660749312380,"results":"43","hashOfConfig":"32"},{"size":406,"mtime":1660658391835,"results":"44","hashOfConfig":"32"},{"size":654,"mtime":1660658391835,"results":"45","hashOfConfig":"32"},{"size":2714,"mtime":1660658391835,"results":"46","hashOfConfig":"32"},{"size":900,"mtime":1660658391839,"results":"47","hashOfConfig":"32"},{"size":306,"mtime":1660658391841,"results":"48","hashOfConfig":"32"},{"size":600,"mtime":1660658391835,"results":"49","hashOfConfig":"32"},{"size":1767,"mtime":1660672260715,"results":"50","hashOfConfig":"32"},{"size":118259,"mtime":1660658391840,"results":"51","hashOfConfig":"32"},{"size":786,"mtime":1660658391839,"results":"52","hashOfConfig":"32"},{"size":808,"mtime":1660749403301,"results":"53","hashOfConfig":"32"},{"size":333,"mtime":1660669551629,"results":"54","hashOfConfig":"32"},{"size":296,"mtime":1660672173389,"results":"55","hashOfConfig":"32"},{"size":1546,"mtime":1660756027157,"results":"56","hashOfConfig":"32"},{"size":1044,"mtime":1660673016721,"results":"57","hashOfConfig":"32"},{"size":2181,"mtime":1660753008997,"results":"58","hashOfConfig":"32"},{"size":3741,"mtime":1660756427581,"results":"59","hashOfConfig":"32"},{"size":4796,"mtime":1660751535088,"results":"60","hashOfConfig":"32"},{"size":3821,"mtime":1660756408995,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"93oxm4",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"68"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"68"},"/Users/karen3/Documents/GitHub/project/src/index.js",[],[],"/Users/karen3/Documents/GitHub/project/src/App.js",[],[],[],"/Users/karen3/Documents/GitHub/project/src/components/MainContentWrapper.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Store.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/IphoneProducts.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AllProducts.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/NavigationCategory.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/ProfileInfo.js",["158"],[],"import actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport {useState,useEffect} from \"react\";\nimport gotUserFromToken from \"./GotUserFromToken\";\nfunction ProfileInfo() {\n  const [login, setLogin] = useState(\"\");\n  const [nick, setNick] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let gql = (url, query, variables) =>\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(localStorage.authToken\n          ? { Authorization: \"Bearer \" + localStorage.authToken }\n          : {}),\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    }).then((res) => console.log(res.json()));\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  store.dispatch(\n    actionPromise(\n      \"changeDetails\",\n      gql(\n        \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n        `mutation changeDetails($user:UserInput){\n              UserUpsert(user:$user){\n              login, _id, nick\n              }\n            }`,\n        {\n          user: {\n            _id: gotUserFromToken(localStorage.authToken).sub.id,\n            login:login,\n            nick:nick\n          },\n        }\n      )\n    )\n  );\n  }\n  useEffect(\n    () => setLogin(gotUserFromToken(localStorage.authToken).sub.login),\n    []\n  );\n  useEffect(\n    () =>\n      setNick(\n        gotUserFromToken(localStorage.authToken).sub.nick\n          ? gotUserFromToken(localStorage.authToken).sub.nick\n          : \"\"\n      ),\n    []\n  );\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"main__form\">\n        <h1 className=\"main__form__title\">My cabinet</h1>\n        <div className=\"main__form__input\">\n          <label>Login</label>\n          <input\n            value={login}\n            onChange={(event) => setLogin(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"main__form__input\">\n          <label>Nick</label>\n          <input\n            value={nick}\n            onChange={(event) => setNick(event.target.value)}\n          />\n        </div>\n        {/* <div className=\"main__form__input\">\n          <label>New password</label>\n          <input\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          {password.length > 0 && password.length < 6 && (\n            <span className=\"main__form__warning\">\n              password must contain then 6 symbols\n            </span>\n          )}\n        </div> */}\n        <input\n          disabled={\n            (login.length >= 1 && password.length === 0) ||\n            (login.length >= 1 && password.length >= 6)\n              ? false\n              : true\n          }\n          type=\"submit\"\n          value=\"Save changes\"\n          className=\"main__form__submit\"\n        />\n      </form>\n      <p className=\"form__delete\">\n        Do you want to delete account?\n        <button\n          className=\"main__form__submit\"\n          onClick={() => {\n            store.dispatch(\n              actionPromise(\n                \"delete\",\n                gql(\n                  \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n                  `mutation delete($user:UserInput){\n                    UserDelete(user:$user){login}\n                  }`,\n                  {\n                    user: {\n                      login: login\n                    }\n                  }\n                )\n              )\n            );\n          }}\n        >\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n}\nexport default ProfileInfo;\n","/Users/karen3/Documents/GitHub/project/src/components/Login.js",["159"],[],"import \"../styles/LogInPage.css\";\nimport Eye from \"./Eye\";\nimport { useState ,useEffect} from \"react\";\nimport actionFullLogin from \"./ActionFullLogin\";\nimport { connect } from \"react-redux\";\nimport store from \"./Store\";\nimport { Link } from \"react-router-dom\";\nfunction LoginForm({setToken}) {\n\n  function LoginForms({onLogin}) {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordShown, setPasswordShown] = useState(false);\n    function handleSubmit(event) {\n      event.preventDefault();\n      onLogin(login, password)\n      store.dispatch(actionFullLogin(login, password))\n      setTimeout(() => {\n        setToken(localStorage.authToken)\n      }, 1000);\n      };\n    \n    return (\n      <section>\n        <form onSubmit={handleSubmit} className=\"main__form\">\n          <h1 className=\"main__form__title\">Sign in</h1>\n          <div className=\"main__form__input\">\n            <label>Login</label>\n            <input\n              value={login}\n              onChange={(event) => setLogin(event.target.value)}\n              type=\"text\"\n            />\n          </div>\n          <div className=\"main__form__input\">\n            <label>Password</label>\n            <input\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              type={passwordShown ? \"text\" : \"password\"}\n            />\n            {password && password.length < 6 && (\n              <span className=\"main__form__warning\">\n                password must contain then 6 symbols\n              </span>\n            )}\n            <button\n              onClick={(event) => {\n                event.preventDefault();\n                setPasswordShown(!passwordShown);\n              }}\n              className=\"main__form__watch\"\n            >\n              <Eye />\n            </button>\n          </div>\n          <input\n            disabled={login.length >= 1 && password.length >= 6 ? false : true}\n            type=\"submit\"\n            value=\"Sign in\"\n            className=\"main__form__submit\"\n          />\n          <p>Don`t have an account? <Link to=\"/signup\">Sign up</Link></p>\n        </form>\n      </section>\n    );\n  }\n  const ConnectedForm= connect(null, {onLogin: actionFullLogin})(LoginForms)\n  return <><ConnectedForm/></>\n}\n\nexport default LoginForm;","/Users/karen3/Documents/GitHub/project/src/components/SignUp.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/SamsungProducts.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Products.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AuthReducer.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/ActionPromise.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Cart.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/ProductInfo.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Reducer.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Eye.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/ActionFullLogin.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Profile.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/ProductInfoWindow.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/ProductCard.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/Logout.js",["160"],[],"function Logout() {\n  return (\n    <button\n      className=\"navigation--logout\"\n      onClick={() => {\n        localStorage.clear();\n        window.location.reload();\n      }}\n    >\n      <img\n        className=\"navigation--logout\"\n        src={require(\"../img/logout.png\")}\n      ></img>\n    </button>\n  );\n}\nexport default Logout;\n","/Users/karen3/Documents/GitHub/project/src/components/GotUserFromToken.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AdminEditCategory.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AdminMenu.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AdminCategoriesMenu.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AdminCategoryInfo.js",[],[],"/Users/karen3/Documents/GitHub/project/src/components/AdminEditItem.js",["161"],[],"import { useState } from \"react\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nfunction AdminEditItem({ item, categories }) {\n    const [name, setName] = useState(item.name);\n    const [description, setDescription] = useState(item.description);\n    const [price, setPrice] = useState(item.price);\n    let selectedCategories = item.categories;\n    function checkSelectedCategories(list, categoryName){\n        return list.filter((c) => c.name === categoryName)[0] ? true : false;\n    }\n    let gql = (url, query, variables) =>\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.authToken ,\n            Accept: \"application/json\",\n        },\n        body: JSON.stringify({ query, variables }),\n      }).then((res) => console.log(res.json()));\n\n    function handleSubmit(event) {\n        console.log(item._id);\n      event.preventDefault();\n      store.dispatch(\n        actionPromise(\n          \"changeDetails\",\n          gql(\n            \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n            `mutation changeDetails($good:GoodInput){\n              GoodUpsert(good:$good){\n              name, price, categories{name}\n              }\n            }`,\n            {\n              good: {\n                _id: item._id,\n                name: name,\n                description: description,\n                price: Number(price),\n                categories: selectedCategories.map((e) => {\n                  return { name: e.name, _id: e._id };\n                }),\n              },\n            }\n          )\n        )\n      );\n    }\n    function deleteItem(event) {\n      event.preventDefault();\n      store.dispatch(\n        actionPromise(\n          \"deleteGood\",\n          gql(\n            \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n            `mutation changeGoodDetails($good:GoodInput){\n              GoodDelete(good:$good){\n              name\n              }\n            }`,\n            {\n              good: {\n                _id: item._id\n              },\n            }\n          )\n        )\n      );\n    }\n  return (\n    <div className=\"edit__good\">\n      <form onSubmit={handleSubmit} className=\"main__form\">\n        <div className=\"main__form__input\">\n          <label>Name</label>\n          <input\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"main__form__input main__form__description\">\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"main__form__input\">\n          <label>Price</label>\n          <input\n            value={price}\n            onChange={(event) => setPrice(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <legend>Categories</legend>\n        {categories &&\n          categories.data.CategoryFind.map((category) => {\n            return (\n              <div key={\"checkbox\" + Math.random()}>\n                <input\n                  type=\"checkbox\"\n                  name=\"category\"\n                  value={category.name}\n                  defaultChecked={checkSelectedCategories(\n                    selectedCategories,\n                    category.name\n                  )}\n                  onChange={(e) => {\n                    if (\n                      !checkSelectedCategories(\n                        selectedCategories,\n                        category.name\n                      )\n                    ) {\n                      selectedCategories.push(category);\n                      console.log(selectedCategories);\n                      e.target.checked = true;\n                    } else {\n                      {\n                        selectedCategories = selectedCategories.filter((i) => {\n                          return i.name !== category.name;\n                        });\n                        console.log(selectedCategories);\n                        e.target.checked = false;\n                      }\n                    }\n                  }}\n                />\n                <label>{category.name}</label>\n              </div>\n            );\n          })}\n        <input\n          disabled={name.length >= 1 ? false : true}\n          type=\"submit\"\n          value=\"Save changes\"\n          className=\"main__form__submit\"\n        />\n        <button\n          className=\"main__form__delete main__form__submit\"\n          onClick={(e) => deleteItem(e)}\n        >\n          Delete item\n        </button>\n      </form>\n    </div>\n  );\n}\nexport default AdminEditItem;\n","/Users/karen3/Documents/GitHub/project/src/components/AddNewItem.js",["162"],[],"import { useState } from \"react\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nfunction AddNewItem({ categories }) {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState();\n  let selectedCategories = [];\n  function checkSelectedCategories(list, categoryName) {\n    return list.filter((c) => c.name === categoryName)[0] ? true : false;\n  }\n  let gql = (url, query, variables) =>\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.authToken,\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    }).then((res) => console.log(res.json()));\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    store.dispatch(\n      actionPromise(\n        \"addNewGood\",\n        gql(\n          \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n          `mutation changeDetails($good:GoodInput){\n              GoodUpsert(good:$good){\n              name, price, categories{name}\n              }\n            }`,\n          {\n            good: {\n              name: name,\n              description: description,\n              price: Number(price),\n              categories: selectedCategories.map((e) => {\n                return { name: e.name, _id: e._id };\n              }),\n            },\n          }\n        )\n      )\n    );\n  }\n  return (\n    <div className=\"edit__good\">\n      <form onSubmit={handleSubmit} className=\"main__form\">\n        <div className=\"main__form__input\">\n          <label>Name</label>\n          <input\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"main__form__input main__form__description\">\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"main__form__input\">\n          <label>Price</label>\n          <input\n            value={price}\n            onChange={(event) => setPrice(event.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <legend>Categories</legend>\n        {categories &&\n          categories.data.CategoryFind.map((category) => {\n            return (\n              <div key={\"checkbox\" + Math.random()}>\n                <input\n                  type=\"checkbox\"\n                  name=\"category\"\n                  value={category.name}\n                  defaultChecked={false}\n                  onChange={(e) => {\n                    if (\n                      !checkSelectedCategories(\n                        selectedCategories,\n                        category.name\n                      )\n                    ) {\n                      selectedCategories.push(category);\n                      console.log(selectedCategories);\n                      e.target.checked = true;\n                    } else {\n                      {\n                        selectedCategories = selectedCategories.filter((i) => {\n                          return i.name !== category.name;\n                        });\n                        console.log(selectedCategories);\n                        e.target.checked = false;\n                      }\n                    }\n                  }}\n                />\n                <label>{category.name}</label>\n              </div>\n            );\n          })}\n        <input\n          disabled={name.length >= 1 ? false : true}\n          type=\"submit\"\n          value=\"Save changes\"\n          className=\"main__form__submit\"\n        />\n      </form>\n    </div>\n  );\n}\nexport default AddNewItem;\n",{"ruleId":"163","severity":1,"message":"164","line":8,"column":20,"nodeType":"165","messageId":"166","endLine":8,"endColumn":31},{"ruleId":"163","severity":1,"message":"167","line":3,"column":20,"nodeType":"165","messageId":"166","endLine":3,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":10,"column":7,"nodeType":"170","endLine":13,"endColumn":8},{"ruleId":"171","severity":1,"message":"172","line":123,"column":23,"nodeType":"173","messageId":"174","endLine":129,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":97,"column":23,"nodeType":"173","messageId":"174","endLine":103,"endColumn":24},"no-unused-vars","'setPassword' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]