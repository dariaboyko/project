{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminOrders.js\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport { connect } from \"react-redux\";\nimport AdminOrderInfo from \"./AdminOrderInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminOrders() {\n  let gql = (url, query, variables) => fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.authToken,\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  }).then(res => console.log(res.json()));\n\n  store.dispatch(actionPromise(\"ordersFind\", gql(\"http://shop-roles.node.ed.asmer.org.ua/graphql\", `query orders($q: String) {\n            OrderFind(query: $q) {\n                orderGoods{good {\n                _id\n                createdAt\n                name\n                description\n                price\n                }},owner {\n                _id\n                createdAt\n                login\n                nick\n                }\n                total\n                _id\n            }\n            }`, {\n    q: JSON.stringify([{}])\n  })));\n  const AdminOrdersList = connect(state => ({}))(AdminOrderInfo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdminOrdersList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = AdminOrders;\nexport default AdminOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminOrders\");","map":{"version":3,"names":["actionPromise","store","connect","AdminOrderInfo","AdminOrders","gql","url","query","variables","fetch","method","headers","Authorization","localStorage","authToken","Accept","body","JSON","stringify","then","res","console","log","json","dispatch","q","AdminOrdersList","state"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminOrders.js"],"sourcesContent":["import actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport { connect } from \"react-redux\";\nimport AdminOrderInfo from \"./AdminOrderInfo\";\nfunction AdminOrders() {\n  let gql = (url, query, variables) =>\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.authToken,\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    }).then((res) => console.log(res.json()));\n  store.dispatch(\n    actionPromise(\n      \"ordersFind\",\n      gql(\n        \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n        `query orders($q: String) {\n            OrderFind(query: $q) {\n                orderGoods{good {\n                _id\n                createdAt\n                name\n                description\n                price\n                }},owner {\n                _id\n                createdAt\n                login\n                nick\n                }\n                total\n                _id\n            }\n            }`,\n        { q: JSON.stringify([{}]) }\n      )\n    )\n  );\n  const AdminOrdersList = connect((state) => ({\n   \n  }))(AdminOrderInfo);\n    return (\n      <>\n      <div>hi</div>\n        <AdminOrdersList />\n      </>\n    );\n}\nexport default AdminOrders;\n"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AACA,SAASC,WAAT,GAAuB;EACrB,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb,KACRC,KAAK,CAACH,GAAD,EAAM;IACTI,MAAM,EAAE,MADC;IAETC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPC,aAAa,EAAE,YAAYC,YAAY,CAACC,SAFjC;MAGPC,MAAM,EAAE;IAHD,CAFA;IAOTC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEX,KAAF;MAASC;IAAT,CAAf;EAPG,CAAN,CAAL,CAQGW,IARH,CAQSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ,CARjB,CADF;;EAUAtB,KAAK,CAACuB,QAAN,CACExB,aAAa,CACX,YADW,EAEXK,GAAG,CACD,gDADC,EAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAnBS,EAoBD;IAAEoB,CAAC,EAAER,IAAI,CAACC,SAAL,CAAe,CAAC,EAAD,CAAf;EAAL,CApBC,CAFQ,CADf;EA2BA,MAAMQ,eAAe,GAAGxB,OAAO,CAAEyB,KAAD,KAAY,EAAZ,CAAD,CAAP,CAEpBxB,cAFoB,CAAxB;EAGE,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMH;;KA/CQC,W;AAgDT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}