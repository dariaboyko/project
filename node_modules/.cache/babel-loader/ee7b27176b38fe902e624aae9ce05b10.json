{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminOrderInfo.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Info() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"hello\"\n  }, void 0, false);\n}\n\n_c = Info;\n\nfunction AdminOrderInfo(_ref) {\n  let {\n    orders\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: orders && orders.data.OrderFind.map(order => {\n      console.log( /*#__PURE__*/_jsxDEV(Route, {\n        path: order._id,\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 22\n        }, this)\n      }, \"route\" + order._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this));\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"order=\" + order._id,\n        element: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 22\n        }, this)\n      }, \"route\" + order._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = AdminOrderInfo;\nexport default AdminOrderInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Info\");\n$RefreshReg$(_c2, \"AdminOrderInfo\");","map":{"version":3,"names":["Route","Routes","Info","AdminOrderInfo","orders","data","OrderFind","map","order","console","log","_id"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminOrderInfo.js"],"sourcesContent":["import { Route, Routes} from \"react-router-dom\";\nfunction Info(){\n    return <>hello</>\n}\nfunction AdminOrderInfo({ orders }) {\n  return (\n    <Routes>\n      {orders&&orders.data.OrderFind.map((order) => {\n        console.log(\n          <Route\n            path={order._id}\n            element={<div>hi</div>}\n            key={\"route\" + order._id}\n          />\n        );\n        return (\n          <Route\n            path={\"order=\"+order._id}\n            element={<Info/>}\n            key={\"route\" + order._id}\n          />\n        );\n      })}\n    </Routes>\n  );\n}\nexport default AdminOrderInfo;\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B;;;;AACA,SAASC,IAAT,GAAe;EACX,oBAAO;IAAA;EAAA,iBAAP;AACH;;KAFQA,I;;AAGT,SAASC,cAAT,OAAoC;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAClC,oBACE,QAAC,MAAD;IAAA,UACGA,MAAM,IAAEA,MAAM,CAACC,IAAP,CAAYC,SAAZ,CAAsBC,GAAtB,CAA2BC,KAAD,IAAW;MAC5CC,OAAO,CAACC,GAAR,eACE,QAAC,KAAD;QACE,IAAI,EAAEF,KAAK,CAACG,GADd;QAEE,OAAO,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAFX,GAGO,UAAUH,KAAK,CAACG,GAHvB;QAAA;QAAA;QAAA;MAAA,QADF;MAOA,oBACE,QAAC,KAAD;QACE,IAAI,EAAE,WAASH,KAAK,CAACG,GADvB;QAEE,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAFX,GAGO,UAAUH,KAAK,CAACG,GAHvB;QAAA;QAAA;QAAA;MAAA,QADF;IAOD,CAfQ;EADX;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;MArBQR,c;AAsBT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}