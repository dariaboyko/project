{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminOrders.js\",\n    _s = $RefreshSig$();\n\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport { connect } from \"react-redux\";\nimport AdminOrdersTable from \"./AdminOrdersTable\";\nimport AdminOrderInfo from \"./AdminOrderInfo\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminOrders() {\n  _s();\n\n  let gql = (url, query, variables) => fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.authToken,\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  }).then(res => console.log(res.json()));\n\n  store.dispatch(actionPromise(\"orders\", gql(\"http://shop-roles.node.ed.asmer.org.ua/graphql\", `query ordersFind($q: String) {\n            OrderFind(query: $q) {\n                orderGoods{_id,good {\n                _id\n                createdAt\n                name\n                description\n                price\n                },count},owner {\n                _id\n                createdAt\n                login\n                nick\n                }\n                total\n                _id\n            }\n            }`, {\n    q: JSON.stringify([{}])\n  })));\n  const AdminOrdersList = connect(state => ({\n    orders: state.promise.orders.payload\n  }))(AdminOrdersTable);\n  const CAdminOrderInfo = connect(state => ({\n    orders: state.promise.orders.payload\n  }))(AdminOrderInfo);\n  const location = useLocation();\n\n  if (location.pathname === \"/editOrders\" || location.pathname === \"/editOrders/\") {\n    return /*#__PURE__*/_jsxDEV(AdminOrdersList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(CAdminOrderInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this);\n  }\n}\n\n_s(AdminOrders, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AdminOrders;\nexport default AdminOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminOrders\");","map":{"version":3,"names":["actionPromise","store","connect","AdminOrdersTable","AdminOrderInfo","useLocation","AdminOrders","gql","url","query","variables","fetch","method","headers","Authorization","localStorage","authToken","Accept","body","JSON","stringify","then","res","console","log","json","dispatch","q","AdminOrdersList","state","orders","promise","payload","CAdminOrderInfo","location","pathname"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminOrders.js"],"sourcesContent":["import actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport { connect } from \"react-redux\";\nimport AdminOrdersTable from \"./AdminOrdersTable\";\nimport AdminOrderInfo from \"./AdminOrderInfo\";\n import { useLocation } from \"react-router-dom\";\n\nfunction AdminOrders() {\n  let gql = (url, query, variables) =>\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.authToken,\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    }).then((res) => console.log(res.json()));\n  store.dispatch(\n    actionPromise(\n      \"orders\",\n      gql(\n        \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n        `query ordersFind($q: String) {\n            OrderFind(query: $q) {\n                orderGoods{_id,good {\n                _id\n                createdAt\n                name\n                description\n                price\n                },count},owner {\n                _id\n                createdAt\n                login\n                nick\n                }\n                total\n                _id\n            }\n            }`,\n        { q: JSON.stringify([{}]) }\n      )\n    )\n  );\n        const AdminOrdersList = connect((state) => ({\n          orders: state.promise.orders.payload,\n        }))(AdminOrdersTable);\n        const CAdminOrderInfo = connect((state) => ({\n          orders: state.promise.orders.payload,\n        }))(AdminOrderInfo);\n          const location = useLocation();\n          if (\n            location.pathname === \"/editOrders\" ||\n            location.pathname === \"/editOrders/\"\n          ) {\n            return <AdminOrdersList />;\n          } else {\n            return <CAdminOrderInfo />;\n          }\n}\nexport default AdminOrders;\n"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACC,SAASC,WAAT,QAA4B,kBAA5B;;;AAED,SAASC,WAAT,GAAuB;EAAA;;EACrB,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb,KACRC,KAAK,CAACH,GAAD,EAAM;IACTI,MAAM,EAAE,MADC;IAETC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPC,aAAa,EAAE,YAAYC,YAAY,CAACC,SAFjC;MAGPC,MAAM,EAAE;IAHD,CAFA;IAOTC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEX,KAAF;MAASC;IAAT,CAAf;EAPG,CAAN,CAAL,CAQGW,IARH,CAQSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ,CARjB,CADF;;EAUAxB,KAAK,CAACyB,QAAN,CACE1B,aAAa,CACX,QADW,EAEXO,GAAG,CACD,gDADC,EAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAnBS,EAoBD;IAAEoB,CAAC,EAAER,IAAI,CAACC,SAAL,CAAe,CAAC,EAAD,CAAf;EAAL,CApBC,CAFQ,CADf;EA2BM,MAAMQ,eAAe,GAAG1B,OAAO,CAAE2B,KAAD,KAAY;IAC1CC,MAAM,EAAED,KAAK,CAACE,OAAN,CAAcD,MAAd,CAAqBE;EADa,CAAZ,CAAD,CAAP,CAEpB7B,gBAFoB,CAAxB;EAGA,MAAM8B,eAAe,GAAG/B,OAAO,CAAE2B,KAAD,KAAY;IAC1CC,MAAM,EAAED,KAAK,CAACE,OAAN,CAAcD,MAAd,CAAqBE;EADa,CAAZ,CAAD,CAAP,CAEpB5B,cAFoB,CAAxB;EAGE,MAAM8B,QAAQ,GAAG7B,WAAW,EAA5B;;EACA,IACE6B,QAAQ,CAACC,QAAT,KAAsB,aAAtB,IACAD,QAAQ,CAACC,QAAT,KAAsB,cAFxB,EAGE;IACA,oBAAO,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CALD,MAKO;IACL,oBAAO,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;AACV;;GArDQ7B,W;UA4CkBD,W;;;KA5ClBC,W;AAsDT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}