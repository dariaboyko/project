{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminEditCategory.js\",\n    _s = $RefreshSig$();\n\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport AdminCategoriesMenu from \"./AdminCategoriesMenu\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport AdminCategoryInfo from \"./AdminCategoryInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminEditCategory() {\n  _s();\n\n  let gql = (url, query, variables) => fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.authToken,\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  }).then(res => res.json());\n\n  store.dispatch(actionPromise(\"categories\", gql(\"http://shop-roles.node.ed.asmer.org.ua/graphql\", `query orders($q:String){\n            CategoryFind(query:$q){\n                _id, name, createdAt, goods{name, description, price},owner{login},parent{name}\n            }\n            }`, {\n    q: JSON.stringify([{}])\n  })));\n  const Categories = connect(state => ({\n    categories: state.promise.categories.payload\n  }))(AdminCategoriesMenu);\n  const CategoryInfo = connect(state => ({\n    categories: state.promise.categories.payload\n  }))(AdminCategoryInfo);\n  const location = useLocation();\n\n  if (location.pathname === \"/editCategories\" || location.pathname === \"/editCategories/\") {\n    return /*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(CategoryInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(AdminEditCategory, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AdminEditCategory;\nexport default AdminEditCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminEditCategory\");","map":{"version":3,"names":["actionPromise","store","AdminCategoriesMenu","connect","useLocation","AdminCategoryInfo","AdminEditCategory","gql","url","query","variables","fetch","method","headers","Authorization","localStorage","authToken","Accept","body","JSON","stringify","then","res","json","dispatch","q","Categories","state","categories","promise","payload","CategoryInfo","location","pathname"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminEditCategory.js"],"sourcesContent":["import actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport AdminCategoriesMenu from \"./AdminCategoriesMenu\";\nimport { connect } from \"react-redux\";\n import { useLocation } from \"react-router-dom\";\nimport AdminCategoryInfo from \"./AdminCategoryInfo\";\nfunction AdminEditCategory() {\n    let gql = (url, query, variables) =>\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n           Authorization: \"Bearer \" + localStorage.authToken,\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({ query, variables }),\n      }).then((res) => res.json());\n  store.dispatch(\n    actionPromise(\n      \"categories\",\n      gql(\n        \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n        `query orders($q:String){\n            CategoryFind(query:$q){\n                _id, name, createdAt, goods{name, description, price},owner{login},parent{name}\n            }\n            }`,\n        { q: JSON.stringify([{}]) }\n      )\n    )\n  );\n  const Categories = connect((state) => ({\n    categories: state.promise.categories.payload,\n  }))(AdminCategoriesMenu);\n  const CategoryInfo = connect((state) => ({\n    categories: state.promise.categories.payload,\n  }))(AdminCategoryInfo);\n  const location = useLocation();\n  if (\n    location.pathname === \"/editCategories\" ||\n    location.pathname === \"/editCategories/\"\n  ) {\n    return <Categories />;\n  }\n  else{\n    return <CategoryInfo />;\n  }\n}\n\nexport default AdminEditCategory;\n"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACC,SAASC,WAAT,QAA4B,kBAA5B;AACD,OAAOC,iBAAP,MAA8B,qBAA9B;;;AACA,SAASC,iBAAT,GAA6B;EAAA;;EACzB,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb,KACRC,KAAK,CAACH,GAAD,EAAM;IACTI,MAAM,EAAE,MADC;IAETC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAENC,aAAa,EAAE,YAAYC,YAAY,CAACC,SAFlC;MAGPC,MAAM,EAAE;IAHD,CAFA;IAOTC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEX,KAAF;MAASC;IAAT,CAAf;EAPG,CAAN,CAAL,CAQGW,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,CADF;;EAUFtB,KAAK,CAACuB,QAAN,CACExB,aAAa,CACX,YADW,EAEXO,GAAG,CACD,gDADC,EAEA;AACT;AACA;AACA;AACA,cANS,EAOD;IAAEkB,CAAC,EAAEN,IAAI,CAACC,SAAL,CAAe,CAAC,EAAD,CAAf;EAAL,CAPC,CAFQ,CADf;EAcA,MAAMM,UAAU,GAAGvB,OAAO,CAAEwB,KAAD,KAAY;IACrCC,UAAU,EAAED,KAAK,CAACE,OAAN,CAAcD,UAAd,CAAyBE;EADA,CAAZ,CAAD,CAAP,CAEf5B,mBAFe,CAAnB;EAGA,MAAM6B,YAAY,GAAG5B,OAAO,CAAEwB,KAAD,KAAY;IACvCC,UAAU,EAAED,KAAK,CAACE,OAAN,CAAcD,UAAd,CAAyBE;EADE,CAAZ,CAAD,CAAP,CAEjBzB,iBAFiB,CAArB;EAGA,MAAM2B,QAAQ,GAAG5B,WAAW,EAA5B;;EACA,IACE4B,QAAQ,CAACC,QAAT,KAAsB,iBAAtB,IACAD,QAAQ,CAACC,QAAT,KAAsB,kBAFxB,EAGE;IACA,oBAAO,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CALD,MAMI;IACF,oBAAO,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;AACF;;GAzCQ3B,iB;UA+BUF,W;;;KA/BVE,iB;AA2CT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}