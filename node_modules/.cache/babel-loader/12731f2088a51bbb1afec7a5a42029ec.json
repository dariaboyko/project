{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AllProducts.js\",\n    _s = $RefreshSig$();\n\nimport Products from \"./Products\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProductInfo from \"./ProductInfo\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllProducts() {\n  _s();\n\n  let gql = (url, query, variables) => fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  }).then(res => res.json());\n\n  store.dispatch(actionPromise(\"data\", gql(\"http://shop-roles.node.ed.asmer.org.ua/graphql\", `query cats($q:String){\n            CategoryFind(query:$q){\n                _id name\n                goods{\n                     _id name images{\n                    url\n                }\n                description price \n            }\n        }}`, {\n    q: JSON.stringify([{}])\n  })));\n  const AllProducts = connect(state => ({\n    data: state.promise.data.payload\n  }))(Products);\n  const AllProductsInfo = connect(state => ({\n    data: state.promise.data.payload\n  }))(ProductInfo);\n  const location = useLocation();\n\n  if (location.pathname === \"/all\") {\n    return /*#__PURE__*/_jsxDEV(AllProducts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AllProductsInfo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AllProducts, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AllProducts;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"names":["Products","useLocation","connect","ProductInfo","actionPromise","store","AllProducts","gql","url","query","variables","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","dispatch","q","state","data","promise","payload","AllProductsInfo","location","pathname"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AllProducts.js"],"sourcesContent":["import Products from \"./Products\";\nimport { useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProductInfo from \"./ProductInfo\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nfunction AllProducts() {\n\n  let gql = (url, query, variables) =>\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    }).then((res) => res.json());\n  store.dispatch(\n    actionPromise(\n      \"data\",\n      gql(\n        \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n        `query cats($q:String){\n            CategoryFind(query:$q){\n                _id name\n                goods{\n                     _id name images{\n                    url\n                }\n                description price \n            }\n        }}`,\n        { q: JSON.stringify([{}]) }\n      )\n    )\n  );\n  const AllProducts = connect((state) => ({\n    data: state.promise.data.payload,\n  }))(Products);\n  const AllProductsInfo = connect((state) => ({\n    data: state.promise.data.payload,\n  }))(ProductInfo);\n  const location = useLocation();\n  if (location.pathname === \"/all\") {\n    return (\n        <AllProducts />\n    );\n  }\n  return <AllProductsInfo />;\n}\nexport default AllProducts;\n"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EAErB,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb,KACRC,KAAK,CAACH,GAAD,EAAM;IACTI,MAAM,EAAE,MADC;IAETC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPC,MAAM,EAAE;IAFD,CAFA;IAMTC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EANG,CAAN,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,CADF;;EASAf,KAAK,CAACgB,QAAN,CACEjB,aAAa,CACX,MADW,EAEXG,GAAG,CACD,gDADC,EAEA;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAXS,EAYD;IAAEe,CAAC,EAAEN,IAAI,CAACC,SAAL,CAAe,CAAC,EAAD,CAAf;EAAL,CAZC,CAFQ,CADf;EAmBA,MAAMX,WAAW,GAAGJ,OAAO,CAAEqB,KAAD,KAAY;IACtCC,IAAI,EAAED,KAAK,CAACE,OAAN,CAAcD,IAAd,CAAmBE;EADa,CAAZ,CAAD,CAAP,CAEhB1B,QAFgB,CAApB;EAGA,MAAM2B,eAAe,GAAGzB,OAAO,CAAEqB,KAAD,KAAY;IAC1CC,IAAI,EAAED,KAAK,CAACE,OAAN,CAAcD,IAAd,CAAmBE;EADiB,CAAZ,CAAD,CAAP,CAEpBvB,WAFoB,CAAxB;EAGA,MAAMyB,QAAQ,GAAG3B,WAAW,EAA5B;;EACA,IAAI2B,QAAQ,CAACC,QAAT,KAAsB,MAA1B,EAAkC;IAChC,oBACI,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADJ;EAGD;;EACD,oBAAO,QAAC,eAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GA3CQvB,W;UAoCUL,W;;;KApCVK,W;AA4CT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}