{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminEditCategory.js\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport CategoryEditing from \"./CategoryEditing\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminEditCategory() {\n  let gql = (url, query, variables) => fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.authToken,\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  }).then(res => res.json());\n\n  store.dispatch(actionPromise(\"categories\", gql(\"http://shop-roles.node.ed.asmer.org.ua/graphql\", `query orders($q:String){\n            CategoryFind(query:$q){\n                _id, name, createdAt, goods{name},owner{login},parent{name}\n            }\n            }`, {\n    q: JSON.stringify([{}])\n  })));\n  const Categories = connect(state => ({\n    category: state.promise.categories.payload\n  }))(CategoryEditing);\n  return /*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_c = AdminEditCategory;\nexport default AdminEditCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminEditCategory\");","map":{"version":3,"names":["actionPromise","store","CategoryEditing","connect","AdminEditCategory","gql","url","query","variables","fetch","method","headers","Authorization","localStorage","authToken","Accept","body","JSON","stringify","then","res","json","dispatch","q","Categories","state","category","promise","categories","payload"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminEditCategory.js"],"sourcesContent":["import actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport CategoryEditing from \"./CategoryEditing\";\nimport { connect } from \"react-redux\";\nfunction AdminEditCategory() {\n    let gql = (url, query, variables) =>\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n           Authorization: \"Bearer \" + localStorage.authToken,\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({ query, variables }),\n      }).then((res) => res.json());\n  store.dispatch(\n    actionPromise(\n      \"categories\",\n      gql(\n        \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n        `query orders($q:String){\n            CategoryFind(query:$q){\n                _id, name, createdAt, goods{name},owner{login},parent{name}\n            }\n            }`,\n        { q: JSON.stringify([{}]) }\n      )\n    )\n  );\n  const Categories = connect((state) => ({\n    category: state.promise.categories.payload,\n  }))(CategoryEditing);\n  return <Categories/>;\n}\n\nexport default AdminEditCategory;\n"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,SAASC,iBAAT,GAA6B;EACzB,IAAIC,GAAG,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb,KACRC,KAAK,CAACH,GAAD,EAAM;IACTI,MAAM,EAAE,MADC;IAETC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAENC,aAAa,EAAE,YAAYC,YAAY,CAACC,SAFlC;MAGPC,MAAM,EAAE;IAHD,CAFA;IAOTC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEX,KAAF;MAASC;IAAT,CAAf;EAPG,CAAN,CAAL,CAQGW,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,CADF;;EAUFpB,KAAK,CAACqB,QAAN,CACEtB,aAAa,CACX,YADW,EAEXK,GAAG,CACD,gDADC,EAEA;AACT;AACA;AACA;AACA,cANS,EAOD;IAAEkB,CAAC,EAAEN,IAAI,CAACC,SAAL,CAAe,CAAC,EAAD,CAAf;EAAL,CAPC,CAFQ,CADf;EAcA,MAAMM,UAAU,GAAGrB,OAAO,CAAEsB,KAAD,KAAY;IACrCC,QAAQ,EAAED,KAAK,CAACE,OAAN,CAAcC,UAAd,CAAyBC;EADE,CAAZ,CAAD,CAAP,CAEf3B,eAFe,CAAnB;EAGA,oBAAO,QAAC,UAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KA7BQE,iB;AA+BT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}