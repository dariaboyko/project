{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminOrderInfo.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Info(_ref) {\n  let {\n    order\n  } = _ref;\n\n  let gql = (url, query, variables) => fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.authToken,\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  }).then(res => console.log(res.json()));\n\n  const goods = order.orderGoods;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), goods.map(good => {\n        console.log(good);\n        return good.good && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.good._id && good.good._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.good.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.good.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                store.dispatch(actionPromise(\"delete\", gql(\"http://shop-roles.node.ed.asmer.org.ua/graphql\", `mutation delete($orderGood: OrderGoodInput) {\n                              OrderGoodDelete(orderGood: $orderGood) {\n                                _id\n                              }\n                            }`, {\n                  orderGood: {\n                    _id: good._id,\n                    count: good.count\n                  }\n                })));\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, \"goodOrder\" + Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Info;\n\nfunction AdminOrderInfo(_ref2) {\n  let {\n    orders\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: orders && orders.data.OrderFind.map(order => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: order._id,\n        element: /*#__PURE__*/_jsxDEV(Info, {\n          order: order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 22\n        }, this)\n      }, \"route\" + order._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = AdminOrderInfo;\nexport default AdminOrderInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Info\");\n$RefreshReg$(_c2, \"AdminOrderInfo\");","map":{"version":3,"names":["Route","Routes","actionPromise","store","Info","order","gql","url","query","variables","fetch","method","headers","Authorization","localStorage","authToken","Accept","body","JSON","stringify","then","res","console","log","json","goods","orderGoods","map","good","_id","name","count","price","dispatch","orderGood","Math","random","AdminOrderInfo","orders","data","OrderFind"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminOrderInfo.js"],"sourcesContent":["import { Route, Routes} from \"react-router-dom\";\nimport actionPromise from \"./ActionPromise\";\nimport store from \"./Store\";\nfunction Info({ order }) {\n   let gql = (url, query, variables) =>\n     fetch(url, {\n       method: \"POST\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n         Authorization: \"Bearer \" + localStorage.authToken,\n         Accept: \"application/json\",\n       },\n       body: JSON.stringify({ query, variables }),\n     }).then((res) => console.log(res.json()));\n  const goods = order.orderGoods;\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th>id</th>\n          <th>name</th>\n          <th>amount</th>\n          <th>price</th>\n          <th>delete</th>\n        </tr>\n        {goods.map((good) => {\n          console.log(good)\n          return (\n            good.good && (\n              <tr key={\"goodOrder\" + Math.random()}>\n                <td>{good.good._id && good.good._id}</td>\n                <td>{good.good.name}</td>\n                <td>{good.count}</td>\n                <td>{good.good.price}</td>\n                <td>\n                  <button\n                    onClick={() => {\n                      store.dispatch(\n                        actionPromise(\n                          \"delete\",\n                          gql(\n                            \"http://shop-roles.node.ed.asmer.org.ua/graphql\",\n                            `mutation delete($orderGood: OrderGoodInput) {\n                              OrderGoodDelete(orderGood: $orderGood) {\n                                _id\n                              }\n                            }`,\n                            {\n                              orderGood: {\n                                _id: good._id,\n                                count: good.count,\n                              },\n                            }\n                          )\n                        )\n                      );\n                    }}\n                  >\n                    X\n                  </button>\n                </td>\n              </tr>\n            )\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\nfunction AdminOrderInfo({ orders }) {\n  return (\n    <Routes>\n      {orders&&orders.data.OrderFind.map((order) => {\n        return (\n          <Route\n            path={order._id}\n            element={<Info order={order}/>}\n            key={\"route\" + order._id}\n          />\n        );\n      })}\n    </Routes>\n  );\n}\nexport default AdminOrderInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}