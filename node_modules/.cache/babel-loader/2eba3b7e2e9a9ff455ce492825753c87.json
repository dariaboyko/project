{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/Documents/GitHub/project/src/components/AdminOrdersTable.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Routes, Link, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminOrdersTable(_ref) {\n  _s();\n\n  let {\n    orders\n  } = _ref;\n  const location = useLocation();\n  return orders ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"order id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"goods amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"order total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), orders.data.OrderFind.map(order => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.owner ? order.owner.login : \"----\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.orderGoods.length > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: location.pathname + \"/\" + order._id,\n                children: order.orderGoods.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this) : order.orderGoods.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, \"order\" + order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: categories ? categories.data.CategoryFind.map(category => {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: category._id,\n          element: /*#__PURE__*/_jsxDEV(CategoryInfo, {\n            category: category,\n            list: categories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 26\n          }, this)\n        }, \"route\" + category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Wait...\"\n  }, void 0, false);\n}\n\n_s(AdminOrdersTable, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AdminOrdersTable;\nexport default AdminOrdersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminOrdersTable\");","map":{"version":3,"names":["Route","Routes","Link","useLocation","AdminOrdersTable","orders","location","data","OrderFind","map","order","_id","owner","login","orderGoods","length","pathname","total","categories","CategoryFind","category"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AdminOrdersTable.js"],"sourcesContent":["import { Route, Routes, Link, useLocation } from \"react-router-dom\";\nfunction AdminOrdersTable({ orders }) {\n  const location = useLocation()\n  return orders ? (\n    <>\n      <table>\n        <tbody>\n          <tr>\n            <th>order id</th>\n            <th>owner</th>\n            <th>goods amount</th>\n            <th>order total</th>\n          </tr>\n          {orders.data.OrderFind.map((order) => {\n            return (\n              <tr key={\"order\" + order._id}>\n                <td>{order._id}</td>\n                <td>{order.owner ? order.owner.login : \"----\"}</td>\n                <td>\n                  {order.orderGoods.length > 0 ? (\n                    <Link to={location.pathname + \"/\" + order._id}>\n                      {order.orderGoods.length}\n                    </Link>\n                  ) : (\n                    order.orderGoods.length\n                  )}\n                </td>\n                <td>{order.total}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <Routes>\n        {categories ? (\n          categories.data.CategoryFind.map((category) => {\n            return (\n              <Route\n                path={category._id}\n                element={<CategoryInfo category={category} list={categories} />}\n                key={\"route\" + category._id}\n              />\n            );\n          })\n        ) : (\n          <></>\n        )}\n      </Routes>\n    </>\n  ) : (\n    <>Wait...</>\n  );\n}\nexport default AdminOrdersTable;\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,WAA9B,QAAiD,kBAAjD;;;;AACA,SAASC,gBAAT,OAAsC;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EACpC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,OAAOE,MAAM,gBACX;IAAA,wBACE;MAAA,uBACE;QAAA,wBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAOGA,MAAM,CAACE,IAAP,CAAYC,SAAZ,CAAsBC,GAAtB,CAA2BC,KAAD,IAAW;UACpC,oBACE;YAAA,wBACE;cAAA,UAAKA,KAAK,CAACC;YAAX;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,UAAKD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYC,KAA1B,GAAkC;YAAvC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA,UACGH,KAAK,CAACI,UAAN,CAAiBC,MAAjB,GAA0B,CAA1B,gBACC,QAAC,IAAD;gBAAM,EAAE,EAAET,QAAQ,CAACU,QAAT,GAAoB,GAApB,GAA0BN,KAAK,CAACC,GAA1C;gBAAA,UACGD,KAAK,CAACI,UAAN,CAAiBC;cADpB;gBAAA;gBAAA;gBAAA;cAAA,QADD,GAKCL,KAAK,CAACI,UAAN,CAAiBC;YANrB;cAAA;cAAA;cAAA;YAAA,QAHF,eAYE;cAAA,UAAKL,KAAK,CAACO;YAAX;cAAA;cAAA;cAAA;YAAA,QAZF;UAAA,GAAS,UAAUP,KAAK,CAACC,GAAzB;YAAA;YAAA;YAAA;UAAA,QADF;QAgBD,CAjBA,CAPH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eA6BE,QAAC,MAAD;MAAA,UACGO,UAAU,GACTA,UAAU,CAACX,IAAX,CAAgBY,YAAhB,CAA6BV,GAA7B,CAAkCW,QAAD,IAAc;QAC7C,oBACE,QAAC,KAAD;UACE,IAAI,EAAEA,QAAQ,CAACT,GADjB;UAEE,OAAO,eAAE,QAAC,YAAD;YAAc,QAAQ,EAAES,QAAxB;YAAkC,IAAI,EAAEF;UAAxC;YAAA;YAAA;YAAA;UAAA;QAFX,GAGO,UAAUE,QAAQ,CAACT,GAH1B;UAAA;UAAA;UAAA;QAAA,QADF;MAOD,CARD,CADS,gBAWT;IAZJ;MAAA;MAAA;MAAA;IAAA,QA7BF;EAAA,gBADW,gBA+CX;IAAA;EAAA,iBA/CF;AAiDD;;GAnDQP,gB;UACUD,W;;;KADVC,gB;AAoDT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}