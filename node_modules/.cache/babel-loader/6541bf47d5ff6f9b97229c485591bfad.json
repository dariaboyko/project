{"ast":null,"code":"function jwtDecode(token) {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {}\n}\n\nfunction authReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    token\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (type === 'AUTH_LOGIN') {\n    const payload = jwtDecode(token);\n    if (payload) return {\n      token,\n      payload\n    };\n  }\n\n  if (type === 'AUTH_LOGOUT') {\n    return {};\n  }\n\n  return state;\n}\n\nexport default authReducer;","map":{"version":3,"names":["jwtDecode","token","JSON","parse","atob","split","e","authReducer","state","type","payload"],"sources":["/Users/karen3/Documents/GitHub/project/src/components/AuthReducer.js"],"sourcesContent":["function jwtDecode(token){\n    try{\n        return JSON.parse(atob(token.split('.')[1]))\n    }\n    catch (e) {\n\n    }\n}\nfunction authReducer(state={}, {type, token}){\n    if (type === 'AUTH_LOGIN'){\n        const payload = jwtDecode(token)\n        if (payload)\n            return {token, payload}\n    }\n    if (type === 'AUTH_LOGOUT'){\n        return {}\n    }\n    return state\n}\nexport default authReducer;"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,KAAnB,EAAyB;EACrB,IAAG;IACC,OAAOC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACH,KAAK,CAACI,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,CAAP;EACH,CAFD,CAGA,OAAOC,CAAP,EAAU,CAET;AACJ;;AACD,SAASC,WAAT,GAA6C;EAAA,IAAxBC,KAAwB,uEAAlB,EAAkB;EAAA,IAAd;IAACC,IAAD;IAAOR;EAAP,CAAc;;EACzC,IAAIQ,IAAI,KAAK,YAAb,EAA0B;IACtB,MAAMC,OAAO,GAAGV,SAAS,CAACC,KAAD,CAAzB;IACA,IAAIS,OAAJ,EACI,OAAO;MAACT,KAAD;MAAQS;IAAR,CAAP;EACP;;EACD,IAAID,IAAI,KAAK,aAAb,EAA2B;IACvB,OAAO,EAAP;EACH;;EACD,OAAOD,KAAP;AACH;;AACD,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}